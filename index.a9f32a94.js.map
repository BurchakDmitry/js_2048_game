{"mappings":"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","sources":["<anon>","src/scripts/main.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js"],"sourcesContent":["(function () {\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$e6256bf45c68d561(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$2fd15edff6687200(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$60dbc22abd7da546() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $efec029548ccee7f$export$fdf2a89c76341bbf(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$e6256bf45c68d561)(arr) || (0, $8ca2848f896a6803$export$2fd15edff6687200)(arr, i) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr, i) || (0, $a0bc1859061deae1$export$60dbc22abd7da546)();\n}\n\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.initialState = initialState || this.generateNewBoard();\n        this.board = JSON.parse(JSON.stringify(this.initialState));\n        this.firstState = JSON.parse(JSON.stringify(this.board));\n        this.score = 0;\n        this.status = \"idle\";\n        this.checkLeft = true;\n        this.checkRight = true;\n        this.checkUp = true;\n        this.checkDown = true;\n        this.checkStart = false;\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            // #region get states\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            // #endregion\n            // #region navigation\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                if (this.checkStart) {\n                    var currentState = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(this.getState());\n                    this.board = this.board.map(function(row) {\n                        var newRow = row.filter(function(el) {\n                            return el !== 0;\n                        });\n                        for(var i = 0; i < newRow.length; i++)if (newRow[i] === newRow[i + 1]) {\n                            newRow[i] *= 2;\n                            _this.score += newRow[i];\n                            newRow[i + 1] = 0;\n                        }\n                        newRow = newRow.filter(function(el) {\n                            return el !== 0;\n                        });\n                        while(newRow.length < 4)newRow.push(0);\n                        return newRow;\n                    });\n                    if (this.checkWin()) this.status = \"win\";\n                    this.checkLeft = this.differenceArrays(currentState, this.getState());\n                    if (this.checkLeft) this.addRandomTile(this.board);\n                    if (this.checkLose() && !this.checkWin()) this.status = \"lose\";\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                if (this.checkStart) {\n                    var currentState = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(this.getState());\n                    this.board = this.board.map(function(row) {\n                        var newRow = row.filter(function(el) {\n                            return el !== 0;\n                        }).reverse();\n                        for(var i = 0; i < newRow.length; i++)if (newRow[i] === newRow[i + 1]) {\n                            newRow[i] *= 2;\n                            _this.score += newRow[i];\n                            newRow[i + 1] = 0;\n                        }\n                        newRow = newRow.filter(function(el) {\n                            return el !== 0;\n                        });\n                        while(newRow.length < 4)newRow.push(0);\n                        return newRow.reverse();\n                    });\n                    if (this.checkWin()) this.status = \"win\";\n                    this.checkRight = this.differenceArrays(currentState, this.getState());\n                    if (this.checkRight) this.addRandomTile(this.board);\n                    if (this.checkLose() && !this.checkWin()) this.status = \"lose\";\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.checkStart) {\n                    var currentState = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(this.getState());\n                    this.board = this.transpose(this.board);\n                    this.moveLeft();\n                    this.board = this.transpose(this.board);\n                    if (this.checkWin()) this.status = \"win\";\n                    this.checkUp = this.differenceArrays(currentState, this.getState());\n                    if (this.checkLose() && !this.checkWin()) this.status = \"lose\";\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.checkStart) {\n                    var currentState = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(this.getState());\n                    this.board = this.transpose(this.board);\n                    this.moveRight();\n                    this.board = this.transpose(this.board);\n                    if (this.checkWin()) this.status = \"win\";\n                    this.checkDown = this.differenceArrays(currentState, this.getState());\n                    if (this.checkLose() && !this.checkWin()) this.status = \"lose\";\n                }\n            }\n        },\n        {\n            // #endregion\n            // #region checking and changing state\n            key: \"differenceArrays\",\n            value: function differenceArrays(arr1, arr2) {\n                var firstArr = arr1.flat().join(\"\");\n                var secondArr = arr2.flat().join(\"\");\n                return firstArr !== secondArr;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.board = this.generateNewBoard();\n                this.board = JSON.parse(JSON.stringify((0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(this.firstState)));\n                this.score = 0;\n                this.status = this.getStatus() !== \"win\" && \"playing\";\n                this.checkStart = true;\n                for(var i = 0; i < 2; i++)this.addRandomTile(this.board);\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.board = JSON.parse(JSON.stringify((0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(this.firstState)));\n                this.score = 0;\n                this.status = \"idle\";\n                this.checkStart = false;\n            }\n        },\n        {\n            // #endregion\n            // #region array manipulation\n            key: \"generateNewBoard\",\n            value: function generateNewBoard() {\n                var newBoard = [\n                    [],\n                    [],\n                    [],\n                    []\n                ];\n                newBoard.forEach(function(row) {\n                    for(var i = 0; i < 4; i++)row.push(0);\n                });\n                return newBoard;\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile(currentBoard) {\n                var emptyCells = [];\n                for(var i = 0; i < currentBoard.length; i++){\n                    for(var j = 0; j < currentBoard[i].length; j++)if (currentBoard[i][j] === 0) emptyCells.push([\n                        i,\n                        j\n                    ]);\n                }\n                if (emptyCells.length > 0) {\n                    var randomIndex = Math.floor(Math.random() * emptyCells.length);\n                    var _emptyCells_randomIndex = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(emptyCells[randomIndex], 2), row = _emptyCells_randomIndex[0], col = _emptyCells_randomIndex[1];\n                    var randomValue = Math.random() < 0.9 ? 2 : 4;\n                    currentBoard[row][col] = randomValue;\n                }\n                return currentBoard;\n            }\n        },\n        {\n            key: \"transpose\",\n            value: function transpose(matrix) {\n                return matrix[0].map(function(_, colIndex) {\n                    return matrix.map(function(row) {\n                        return row[colIndex];\n                    });\n                });\n            }\n        },\n        {\n            // #endregion\n            // #region check moves\n            key: \"checkWin\",\n            value: function checkWin() {\n                var result = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(this.board).flat().filter(function(el) {\n                    return el >= 2048;\n                }).length;\n                return result > 0;\n            }\n        },\n        {\n            key: \"checkLose\",\n            value: function checkLose() {\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    if (this.board[row][col] === 0) return false;\n                }\n                for(var row1 = 0; row1 < 4; row1++)for(var col1 = 0; col1 < 4; col1++){\n                    if (col1 < 3 && this.board[row1][col1] === this.board[row1][col1 + 1]) return false;\n                    if (row1 < 3 && this.board[row1][col1] === this.board[row1 + 1][col1]) return false;\n                }\n                return true;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$table = document.querySelector(\".game-field\");\nvar $197cd56b15c33885$var$tableCell = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)($197cd56b15c33885$var$table.querySelectorAll(\"td\"));\nvar $197cd56b15c33885$var$scoreInfo = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$playButton = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$startMessage = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$winMessage = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$loseMessage = document.querySelector(\".message-lose\");\n$197cd56b15c33885$var$playButton.addEventListener(\"click\", function(e) {\n    if (e.target.textContent === \"Start\") {\n        $197cd56b15c33885$var$game.start();\n        e.target.textContent = \"Restart\";\n        e.target.classList.remove(\"start\");\n        e.target.classList.add(\"restart\");\n        $197cd56b15c33885$var$startMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$loseMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$tableFormatting();\n        document.addEventListener(\"keydown\", function(btn) {\n            switch(btn.key){\n                case \"ArrowUp\":\n                    $197cd56b15c33885$var$game.moveUp();\n                    break;\n                case \"ArrowDown\":\n                    $197cd56b15c33885$var$game.moveDown();\n                    break;\n                case \"ArrowLeft\":\n                    $197cd56b15c33885$var$game.moveLeft();\n                    break;\n                case \"ArrowRight\":\n                    $197cd56b15c33885$var$game.moveRight();\n                    break;\n                default:\n                    break;\n            }\n            $197cd56b15c33885$var$tableFormatting();\n        });\n        var startX = 0;\n        var startY = 0;\n        var threshold = 100;\n        document.addEventListener(\"touchstart\", function(ev) {\n            startX = ev.touches[0].clientX;\n            startY = ev.touches[0].clientY;\n        }, false);\n        document.addEventListener(\"touchend\", function(ev) {\n            var endX = ev.changedTouches[0].clientX;\n            var endY = ev.changedTouches[0].clientY;\n            var diffX = endX - startX;\n            var diffY = endY - startY;\n            if (Math.abs(diffX) > Math.abs(diffY)) {\n                if (diffX > threshold) $197cd56b15c33885$var$game.moveRight();\n                else if (diffX < -threshold) $197cd56b15c33885$var$game.moveLeft();\n            } else {\n                if (diffY > threshold) $197cd56b15c33885$var$game.moveDown();\n                else if (diffY < -threshold) $197cd56b15c33885$var$game.moveUp();\n            }\n            $197cd56b15c33885$var$tableFormatting();\n        }, false);\n        return;\n    }\n    if (e.target.textContent === \"Restart\") {\n        $197cd56b15c33885$var$game.restart();\n        e.target.classList.remove(\"restart\");\n        e.target.classList.add(\"start\");\n        e.target.textContent = \"Start\";\n        $197cd56b15c33885$var$tableFormatting();\n    }\n});\nfunction $197cd56b15c33885$var$tableFormatting() {\n    $197cd56b15c33885$var$tableCell.forEach(function(cell, index) {\n        var flatBoard = $197cd56b15c33885$var$game.board.flat();\n        var cellContent = cell.textContent;\n        cell.classList.remove(\"field-cell--\".concat(cellContent));\n        cell.textContent = flatBoard[index] !== 0 ? flatBoard[index] : \"\";\n        cell.classList.add(\"field-cell--\".concat(flatBoard[index]));\n        $197cd56b15c33885$var$scoreInfo.textContent = $197cd56b15c33885$var$game.getScore();\n        if ($197cd56b15c33885$var$game.getStatus() === \"win\") $197cd56b15c33885$var$winMessage.classList.remove(\"hidden\");\n        else $197cd56b15c33885$var$loseMessage.classList.toggle(\"hidden\");\n        if ($197cd56b15c33885$var$game.getStatus() === \"lose\") $197cd56b15c33885$var$loseMessage.classList.remove(\"hidden\");\n        else $197cd56b15c33885$var$loseMessage.classList.add(\"hidden\");\n    });\n}\n\n})();\n//# sourceMappingURL=index.a9f32a94.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\nconst table = document.querySelector('.game-field');\nconst tableCell = [...table.querySelectorAll('td')];\nconst scoreInfo = document.querySelector('.game-score');\nconst playButton = document.querySelector('.button');\nconst startMessage = document.querySelector('.message-start');\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\n\nplayButton.addEventListener('click', (e) => {\n  if (e.target.textContent === 'Start') {\n    game.start();\n    e.target.textContent = 'Restart';\n    e.target.classList.remove('start');\n    e.target.classList.add('restart');\n\n    startMessage.classList.add('hidden');\n    loseMessage.classList.add('hidden');\n\n    tableFormatting();\n\n    document.addEventListener('keydown', (btn) => {\n      switch (btn.key) {\n        case 'ArrowUp':\n          game.moveUp();\n\n          break;\n        case 'ArrowDown':\n          game.moveDown();\n\n          break;\n        case 'ArrowLeft':\n          game.moveLeft();\n\n          break;\n        case 'ArrowRight':\n          game.moveRight();\n\n          break;\n        default:\n          break;\n      }\n\n      tableFormatting();\n    });\n\n    let startX = 0;\n    let startY = 0;\n    const threshold = 100;\n\n    document.addEventListener(\n      'touchstart',\n      function (ev) {\n        startX = ev.touches[0].clientX;\n        startY = ev.touches[0].clientY;\n      },\n      false,\n    );\n\n    document.addEventListener(\n      'touchend',\n      (ev) => {\n        const endX = ev.changedTouches[0].clientX;\n        const endY = ev.changedTouches[0].clientY;\n\n        const diffX = endX - startX;\n        const diffY = endY - startY;\n\n        if (Math.abs(diffX) > Math.abs(diffY)) {\n          if (diffX > threshold) {\n            game.moveRight();\n          } else if (diffX < -threshold) {\n            game.moveLeft();\n          }\n        } else {\n          if (diffY > threshold) {\n            game.moveDown();\n          } else if (diffY < -threshold) {\n            game.moveUp();\n          }\n        }\n\n        tableFormatting();\n      },\n      false,\n    );\n\n    return;\n  }\n\n  if (e.target.textContent === 'Restart') {\n    game.restart();\n\n    e.target.classList.remove('restart');\n    e.target.classList.add('start');\n    e.target.textContent = 'Start';\n\n    tableFormatting();\n  }\n});\n\nfunction tableFormatting() {\n  tableCell.forEach((cell, index) => {\n    const flatBoard = game.board.flat();\n    const cellContent = cell.textContent;\n\n    cell.classList.remove(`field-cell--${cellContent}`);\n    cell.textContent = flatBoard[index] !== 0 ? flatBoard[index] : '';\n    cell.classList.add(`field-cell--${flatBoard[index]}`);\n    scoreInfo.textContent = game.getScore();\n\n    if (game.getStatus() === 'win') {\n      winMessage.classList.remove('hidden');\n    } else {\n      loseMessage.classList.toggle('hidden');\n    }\n\n    if (game.getStatus() === 'lose') {\n      loseMessage.classList.remove('hidden');\n    } else {\n      loseMessage.classList.add('hidden');\n    }\n  });\n}\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","'use strict';\n\nclass Game {\n  constructor(initialState) {\n    this.initialState = initialState || this.generateNewBoard();\n    this.board = JSON.parse(JSON.stringify(this.initialState));\n    this.firstState = JSON.parse(JSON.stringify(this.board));\n    this.score = 0;\n    this.status = 'idle';\n    this.checkLeft = true;\n    this.checkRight = true;\n    this.checkUp = true;\n    this.checkDown = true;\n    this.checkStart = false;\n  }\n\n  // #region get states\n\n  getState() {\n    return this.board;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  // #endregion\n\n  // #region navigation\n\n  moveLeft() {\n    if (this.checkStart) {\n      const currentState = [...this.getState()];\n\n      this.board = this.board.map((row) => {\n        let newRow = row.filter((el) => el !== 0);\n\n        for (let i = 0; i < newRow.length; i++) {\n          if (newRow[i] === newRow[i + 1]) {\n            newRow[i] *= 2;\n            this.score += newRow[i];\n            newRow[i + 1] = 0;\n          }\n        }\n\n        newRow = newRow.filter((el) => el !== 0);\n\n        while (newRow.length < 4) {\n          newRow.push(0);\n        }\n\n        return newRow;\n      });\n\n      if (this.checkWin()) {\n        this.status = 'win';\n      }\n\n      this.checkLeft = this.differenceArrays(currentState, this.getState());\n\n      if (this.checkLeft) {\n        this.addRandomTile(this.board);\n      }\n\n      if (this.checkLose() && !this.checkWin()) {\n        this.status = 'lose';\n      }\n    }\n  }\n\n  moveRight() {\n    if (this.checkStart) {\n      const currentState = [...this.getState()];\n\n      this.board = this.board.map((row) => {\n        let newRow = row.filter((el) => el !== 0).reverse();\n\n        for (let i = 0; i < newRow.length; i++) {\n          if (newRow[i] === newRow[i + 1]) {\n            newRow[i] *= 2;\n            this.score += newRow[i];\n            newRow[i + 1] = 0;\n          }\n        }\n\n        newRow = newRow.filter((el) => el !== 0);\n\n        while (newRow.length < 4) {\n          newRow.push(0);\n        }\n\n        return newRow.reverse();\n      });\n\n      if (this.checkWin()) {\n        this.status = 'win';\n      }\n\n      this.checkRight = this.differenceArrays(currentState, this.getState());\n\n      if (this.checkRight) {\n        this.addRandomTile(this.board);\n      }\n\n      if (this.checkLose() && !this.checkWin()) {\n        this.status = 'lose';\n      }\n    }\n  }\n\n  moveUp() {\n    if (this.checkStart) {\n      const currentState = [...this.getState()];\n\n      this.board = this.transpose(this.board);\n      this.moveLeft();\n      this.board = this.transpose(this.board);\n\n      if (this.checkWin()) {\n        this.status = 'win';\n      }\n\n      this.checkUp = this.differenceArrays(currentState, this.getState());\n\n      if (this.checkLose() && !this.checkWin()) {\n        this.status = 'lose';\n      }\n    }\n  }\n\n  moveDown() {\n    if (this.checkStart) {\n      const currentState = [...this.getState()];\n\n      this.board = this.transpose(this.board);\n      this.moveRight();\n      this.board = this.transpose(this.board);\n\n      if (this.checkWin()) {\n        this.status = 'win';\n      }\n      this.checkDown = this.differenceArrays(currentState, this.getState());\n\n      if (this.checkLose() && !this.checkWin()) {\n        this.status = 'lose';\n      }\n    }\n  }\n\n  // #endregion\n\n  // #region checking and changing state\n\n  differenceArrays(arr1, arr2) {\n    const firstArr = arr1.flat().join('');\n    const secondArr = arr2.flat().join('');\n\n    return firstArr !== secondArr;\n  }\n\n  start() {\n    this.board = this.generateNewBoard();\n    this.board = JSON.parse(JSON.stringify([...this.firstState]));\n    this.score = 0;\n    this.status = this.getStatus() !== 'win' && 'playing';\n    this.checkStart = true;\n\n    for (let i = 0; i < 2; i++) {\n      this.addRandomTile(this.board);\n    }\n  }\n\n  restart() {\n    this.board = JSON.parse(JSON.stringify([...this.firstState]));\n    this.score = 0;\n    this.status = 'idle';\n    this.checkStart = false;\n  }\n\n  // #endregion\n\n  // #region array manipulation\n  generateNewBoard() {\n    const newBoard = [[], [], [], []];\n\n    newBoard.forEach((row) => {\n      for (let i = 0; i < 4; i++) {\n        row.push(0);\n      }\n    });\n\n    return newBoard;\n  }\n\n  addRandomTile(currentBoard) {\n    const emptyCells = [];\n\n    for (let i = 0; i < currentBoard.length; i++) {\n      for (let j = 0; j < currentBoard[i].length; j++) {\n        if (currentBoard[i][j] === 0) {\n          emptyCells.push([i, j]);\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const randomIndex = Math.floor(Math.random() * emptyCells.length);\n      const [row, col] = emptyCells[randomIndex];\n      const randomValue = Math.random() < 0.9 ? 2 : 4;\n\n      currentBoard[row][col] = randomValue;\n    }\n\n    return currentBoard;\n  }\n\n  transpose(matrix) {\n    return matrix[0].map((_, colIndex) => matrix.map((row) => row[colIndex]));\n  }\n\n  // #endregion\n\n  // #region check moves\n  checkWin() {\n    const result = [...this.board].flat().filter((el) => el >= 2048).length;\n\n    return result > 0;\n  }\n\n  checkLose() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 0) {\n          return false;\n        }\n      }\n    }\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (col < 3 && this.board[row][col] === this.board[row][col + 1]) {\n          return false;\n        }\n\n        if (row < 3 && this.board[row][col] === this.board[row + 1][col]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n  // #endregion\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n"],"names":["$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$a5be06335b3a083c","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","TypeError","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","$197cd56b15c33885$var$game","protoProps","staticProps","Game","initialState","instance","Constructor","generateNewBoard","board","JSON","parse","stringify","firstState","score","status","checkLeft","checkRight","checkUp","checkDown","checkStart","value","_this","currentState","getState","map","row","newRow","filter","el","push","checkWin","differenceArrays","addRandomTile","checkLose","reverse","transpose","moveLeft","moveRight","arr1","firstArr","flat","join","getStatus","newBoard","forEach","currentBoard","emptyCells","j","randomIndex","Math","floor","random","_emptyCells_randomIndex","_s","_e","_i","_arr","_n","_d","next","done","err","col","matrix","_","colIndex","result","row1","col1","$197cd56b15c33885$var$tableCell","$197cd56b15c33885$var$table","document","querySelector","querySelectorAll","$197cd56b15c33885$var$scoreInfo","$197cd56b15c33885$var$playButton","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$winMessage","$197cd56b15c33885$var$loseMessage","$197cd56b15c33885$var$tableFormatting","cell","index","flatBoard","cellContent","textContent","classList","remove","concat","add","getScore","toggle","addEventListener","e","start","btn","moveUp","moveDown","startX","startY","ev","touches","clientX","clientY","endX","changedTouches","endY","diffX","diffY","abs","restart"],"version":3,"file":"index.a9f32a94.js.map"}